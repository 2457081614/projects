package com.meession.market.customer.entity;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.meession.market.common.RDU;
import com.meession.market.common.dateutil.DateUtil;
import com.meession.market.task.entity.Task;


/**
 * 客户POJO类
 * @author fzh
 *
 */
/*
	name
	academy
	grade
	className
	tel
	qq
	address
	interest
	hometown
	birthday
	tasks
	remarks
 * */
@Entity
@Table(name = "Customer")
public class Customer{
	/**
	 * 数据库唯一标识符
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name="customer_id")
	private long id;
	/**
	 * 客户的名字
	 */
	private String name;
	/**
	 * 入学年份
	 */
	@Column(length = 10)
	private String grade;
	/**
	 * 院系
	 */
	private String academy;
	/**
	 * 班级
	 */
	private String className;
	/**
	 * 客户的联系电话
	 */
	@Column(length = 11)
	private String tel;
	/**
	 * 客户的QQ
	 */
	@Column(length = 20)
	private String qq;
	/**
	 * 客户的住址。<br/>
	 * 如果是校内学生，那么住址为寝室地址，如:琴湖1栋101；<br/>
	 * 如果不是校内学生，那么住址就是这个客户的住址。<br/>
	 */
	private String address;
	/**
	 * 客户的兴趣爱好
	 */
	private String interest;
	
	/**
	 * 客户所在学校
	 */
	private  String school;
	
	/**
	 * 客户的生日
	 */
	private String birthday;
	
	 /**
	  * 客户的家乡
	  */
	private String hometown;
	/**
	 * 对客户的备注。<br/>
	 */
	private String remarks;
	/**
	 * 是否已被删除.<br/>
	 * 如果没有被删除，则这个值为0，否则为1.<br/><br/>
	 */
	@Column(name = "deleted",length = 1,
			nullable = false,columnDefinition = "INT default 0")
	private int deleted;
	
	/*@OneToMany(cascade=CascadeType.ALL,fetch=FetchType.EAGER,mappedBy="customer")
	private List<Task> tasks; */
	public long getId() {
		return id;
	}
	public void setId(long id) {
		this.id = id;
	}
	
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getGrade() {
		return grade;
	}
	public void setGrade(String grade) {
		this.grade = grade;
	}
	public String getAcademy() {
		return academy;
	}
	public void setAcademy(String academy) {
		this.academy = academy;
	}
	public String getClassName() {
		return className;
	}
	public void setClassName(String className) {
		this.className = className;
	}
	public String getTel() {
		return tel;
	}
	public void setTel(String tel) {
		this.tel = tel;
	}
	public String getQq() {
		return qq;
	}
	public void setQq(String qq) {
		this.qq = qq;
	}
	public String getAddress() {
		return address;
	}
	public void setAddress(String address) {
		this.address = address;
	}
	public String getRemarks() {
		return remarks;
	}
	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}
	
	
	/*public List<Task> getTasks() {
		return tasks;
	}
	public void setTasks(List<Task> tasks) {
		this.tasks = tasks;
	}*/
	
	
	public String getInterest() {
		return interest;
	}
	public void setInterest(String interest) {
		this.interest = interest;
	}
	
	public String getHometown() {
		return hometown;
	}
	public void setHometown(String hometown) {
		this.hometown = hometown;
	}
	
	public String getSchool() {
		return school;
	}
	public void setSchool(String school) {
		this.school = school;
	}
	
	public int getDeleted() {
		return deleted;
	}
	public void setDeleted(int deleted) {
		this.deleted = deleted;
	}
	
	public String getBirthday() {
		return birthday;
	}
	public void setBirthday(String birthday) {
		this.birthday = birthday;
	}
	
	public static Customer mock(){
		Customer customer=new Customer();
		customer.setName(RDU.randomChineseName());
		customer.setAcademy(RDU.randDepartment());
		customer.setGrade(RDU.random(5) + "年级");
		customer.setTel(RDU.randomCellPhoneNumber());
		customer.setClassName(RDU.ranClass());
		customer.setQq(RDU.randQq());
		customer.setAddress("琴湖1栋"+RDU.random(10)+RDU.random(10)+RDU.random(10));
		customer.setRemarks("勤奋好学,热爱编程,熟悉Java");
		customer.setInterest(RDU.ranInterest());
		customer.setHometown(RDU.ranHometown());
		customer.setBirthday(DateUtil.dateToString(RDU.randomDate()));
		customer.setSchool(RDU.ranSchool());
		return customer;
		
	}
	public static List<Customer> mock(int size){
		List<Customer> cusList=new ArrayList<Customer>();
		for(int i=0;i<size;i++){
			cusList.add(Customer.mock());
		}
		return cusList;
	}
	
	public static List<Customer> getCustomers(String[][] sourceData) {
		List<Customer> list = new ArrayList<>();

		if (sourceData != null && sourceData.length > 0) {
			int name = 0, tel = 0, qq = 0, address = 0, academy = 0, birthday = 0, grade = 0,className=0, hometown = 0, interest = 0, remarks = 0, school = 0;
			for (int i = 0; i < sourceData[0].length; i++) {
				String s = sourceData[0][i];
				if (s != null && !"".equals(s.trim())) {
					if (s.contains("姓名") || s.contains("名字"))
						name = i;
					else if (s.contains("电话") || s.contains("手机号码"))
						tel = i;
					
					else if (s.contains("QQ") || s.contains("qq"))
						qq = i;
					else if (s.contains("住址") || s.contains("寝室")
							|| s.contains("地址"))
						address = i;
					else if (s.contains("院系")||s.contains("学院"))
						academy = i;
					else if (s.contains("生日") || s.contains("出生日期"))
						birthday = i;
					else if (s.contains("年级"))
						grade = i;
					else  if(s.contains("家乡")||s.contains("籍贯"))
						 hometown=i;
					else  if (s.contains("兴趣")||s.contains("爱好"))
						interest=i;
					
					else if(s.contains("班级")||s.contains("班级名"))
						className=i;
					else if(s.contains("学校")||s.contains("所在学校")||s.contains("就读学校"))
						school=i;
					
				}
			}
			Customer customer = null;
			for (int i = 1; i < sourceData.length; i++) {
				customer = new Customer();
				customer.setName(sourceData[i][name]);
				customer.setTel(sourceData[i][tel]);
				customer.setQq(sourceData[i][qq]);
				customer.setAddress(sourceData[i][address]);
                 customer.setAcademy(sourceData[i][academy]);
                 customer.setClassName(sourceData[i][className]);
                 customer.setGrade(sourceData[i][grade]);
                 customer.setSchool(sourceData[i][school]);
                 customer.setInterest(sourceData[i][interest]);
                 customer.setHometown(sourceData[i][hometown]);
                 customer.setBirthday(sourceData[i][birthday]);
				list.add(customer);
			}
		}

		return list;
	}
	
}
